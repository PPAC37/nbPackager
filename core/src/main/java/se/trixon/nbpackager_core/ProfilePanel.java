/*
 * Copyright 2020 Patrik Karlström.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package se.trixon.nbpackager_core;

import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.prefs.BackingStoreException;
import java.util.prefs.Preferences;
import se.trixon.almond.util.Dict;
import static se.trixon.nbpackager_core.Options.*;

/**
 *
 * @author Patrik Karlström
 */
public class ProfilePanel extends javax.swing.JPanel {

    private final Options mOptions = Options.getInstance();

    /**
     * Creates new form ProfilePanel
     */
    public ProfilePanel() {
        initComponents();
    }

    void loadProfile(String profile) {
        Preferences p = mOptions.getPreferences().node(KEY_PROFILES).node(profile);

        sourceFileChooserPanel.setPath(p.get(KEY_PROFILE_SOURCE, ""));
    }

    void removeProfile(String profile) {
        Preferences p = mOptions.getPreferences().node(KEY_PROFILES).node(profile);
        try {
            p.removeNode();
        } catch (BackingStoreException ex) {
            Logger.getLogger(ProfilePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void saveProfile(String profile) {
        Preferences p = mOptions.getPreferences().node(KEY_PROFILES).node(profile);

        p.put(KEY_PROFILE_SOURCE, sourceFileChooserPanel.getPath());
//        List<String> vvv = jmodsList.getSelectedValuesList();
//        p.put(KEY_PROFILE_MODULES, String.join(",", vvv));
//        p.put(KEY_PROFILE_CUSTOM_MODULE_PATH, customModulePathTextArea.getText());
//        p.put(KEY_PROFILE_CUSTOM_MODULES, customModulesTextArea.getText());
//        p.putBoolean(KEY_PROFILE_BIND_SERVICES, bindServicesCheckBox.isSelected());
//        p.putBoolean(KEY_PROFILE_IGNORE_SIGNING, signingCheckBox.isSelected());
//        p.putBoolean(KEY_PROFILE_NO_HEADER, headersCheckBox.isSelected());
//        p.putBoolean(KEY_PROFILE_NO_MAN, manCheckBox.isSelected());
//        p.putBoolean(KEY_PROFILE_STRIP_DEBUG, stripCheckBox.isSelected());
//        p.putInt(KEY_PROFILE_COMPRESS, compressComboBox.getSelectedIndex());
//        p.putInt(KEY_PROFILE_ENDIAN, endianComboBox.getSelectedIndex());
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        firstPanel = new javax.swing.JPanel();
        sourceFileChooserPanel = new se.trixon.almond.util.swing.dialogs.FileChooserPanel();
        destFileChooserPanel = new se.trixon.almond.util.swing.dialogs.FileChooserPanel();
        preXFileChooserPanel = new se.trixon.almond.util.swing.dialogs.FileChooserPanel();
        postXFileChooserPanel = new se.trixon.almond.util.swing.dialogs.FileChooserPanel();
        resourcesFileChooserPanel = new se.trixon.almond.util.swing.dialogs.FileChooserPanel();
        appImageFileChooserPanel = new se.trixon.almond.util.swing.dialogs.FileChooserPanel();
        jrePanel = new javax.swing.JPanel();
        linuxFileChooserPanel = new se.trixon.almond.util.swing.dialogs.FileChooserPanel();
        macFileChooserPanel = new se.trixon.almond.util.swing.dialogs.FileChooserPanel();
        windowsFileChooserPanel = new se.trixon.almond.util.swing.dialogs.FileChooserPanel();
        destPanel = new javax.swing.JPanel();
        appCheckBox = new javax.swing.JCheckBox();
        linuxCheckBox = new javax.swing.JCheckBox();
        macCheckBox = new javax.swing.JCheckBox();
        winCheckBox = new javax.swing.JCheckBox();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(64, 0), new java.awt.Dimension(64, 0), new java.awt.Dimension(64, 32767));
        sha512CheckBox = new javax.swing.JCheckBox();
        sha256CheckBox = new javax.swing.JCheckBox();

        setLayout(new java.awt.GridBagLayout());

        firstPanel.setLayout(new java.awt.GridLayout(3, 2));

        sourceFileChooserPanel.setCheckBoxMode(false);
        sourceFileChooserPanel.setHeader(Dict.SOURCE.toString());
        sourceFileChooserPanel.setMode(1);
        firstPanel.add(sourceFileChooserPanel);

        destFileChooserPanel.setHeader(Dict.DESTINATION.toString());
        firstPanel.add(destFileChooserPanel);

        preXFileChooserPanel.setCheckBoxMode(false);
        preXFileChooserPanel.setHeader("PRE execution script");
        preXFileChooserPanel.setMode(1);
        firstPanel.add(preXFileChooserPanel);

        postXFileChooserPanel.setHeader("POST execution script");
        firstPanel.add(postXFileChooserPanel);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("se/trixon/cricreator_core/Bundle"); // NOI18N
        resourcesFileChooserPanel.setHeader(bundle.getString("resources")); // NOI18N
        firstPanel.add(resourcesFileChooserPanel);

        appImageFileChooserPanel.setHeader(bundle.getString("template")); // NOI18N
        firstPanel.add(appImageFileChooserPanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        add(firstPanel, gridBagConstraints);

        jrePanel.setLayout(new java.awt.GridLayout(1, 3));

        linuxFileChooserPanel.setHeader("Linux JRE");
        jrePanel.add(linuxFileChooserPanel);

        macFileChooserPanel.setHeader("Mac JRE");
        jrePanel.add(macFileChooserPanel);

        windowsFileChooserPanel.setHeader("Windows JRE");
        jrePanel.add(windowsFileChooserPanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        add(jrePanel, gridBagConstraints);

        appCheckBox.setText("AppImage");
        destPanel.add(appCheckBox);

        linuxCheckBox.setText("Linux");
        destPanel.add(linuxCheckBox);

        macCheckBox.setText("MaxOS");
        destPanel.add(macCheckBox);

        winCheckBox.setText("Windows");
        destPanel.add(winCheckBox);
        destPanel.add(filler1);

        sha512CheckBox.setText("sha512sum");
        destPanel.add(sha512CheckBox);

        sha256CheckBox.setText("sha256sum");
        destPanel.add(sha256CheckBox);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        add(destPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox appCheckBox;
    private se.trixon.almond.util.swing.dialogs.FileChooserPanel appImageFileChooserPanel;
    private se.trixon.almond.util.swing.dialogs.FileChooserPanel destFileChooserPanel;
    private javax.swing.JPanel destPanel;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JPanel firstPanel;
    private javax.swing.JPanel jrePanel;
    private javax.swing.JCheckBox linuxCheckBox;
    private se.trixon.almond.util.swing.dialogs.FileChooserPanel linuxFileChooserPanel;
    private javax.swing.JCheckBox macCheckBox;
    private se.trixon.almond.util.swing.dialogs.FileChooserPanel macFileChooserPanel;
    private se.trixon.almond.util.swing.dialogs.FileChooserPanel postXFileChooserPanel;
    private se.trixon.almond.util.swing.dialogs.FileChooserPanel preXFileChooserPanel;
    private se.trixon.almond.util.swing.dialogs.FileChooserPanel resourcesFileChooserPanel;
    private javax.swing.JCheckBox sha256CheckBox;
    private javax.swing.JCheckBox sha512CheckBox;
    private se.trixon.almond.util.swing.dialogs.FileChooserPanel sourceFileChooserPanel;
    private javax.swing.JCheckBox winCheckBox;
    private se.trixon.almond.util.swing.dialogs.FileChooserPanel windowsFileChooserPanel;
    // End of variables declaration//GEN-END:variables
}
